from os import path as os_path
import APPETITE.Constants as constants

MINIMUM_ORIGINAL_ACCURACY = 0.75
MINIMUM_DRIFT_ACCURACY_DROP = 0.1

# Transform the diagnoser to iterable
try:
    iter(constants.DEFAULT_FIXING_DIAGNOSER)
    if isinstance(constants.DEFAULT_FIXING_DIAGNOSER, str):
        raise TypeError
except TypeError:
    constants.DEFAULT_FIXING_DIAGNOSER = (constants.DEFAULT_FIXING_DIAGNOSER, )


STOP_ON_EXCEPTION = False

WASTED_EFFORT_REQUIRE_FULL_FIX = False # Fix all faulty features

DATA_DIRECTORY = "data"
DATASET_DESCRIPTION_FILE_NAME = "all_datasets"
DATASET_DESCRIPTION_FILE_PATH = os_path.join(DATA_DIRECTORY, f"{DATASET_DESCRIPTION_FILE_NAME}.csv")
DATASETS_DIRECTORY = "Classification_Datasets"
DATASETS_FULL_PATH = os_path.join(DATA_DIRECTORY, DATASETS_DIRECTORY)

RESULTS_DIRECTORY = "results"
RESULTS_FULL_PATH = os_path.join(DATA_DIRECTORY, RESULTS_DIRECTORY)
TEMP_RESULTS_DIRECTORY = "temp"
TEMP_RESULTS_FULL_PATH = os_path.join(RESULTS_FULL_PATH, TEMP_RESULTS_DIRECTORY)
RESULTS_FILE_NAME_PREFIX = "results"
ERRORS_FILE_NAME_PREFIX = "errors"
FUZZY_PARTICIPATION_PREFIX = "fuzzy_participation"
RESULTS_FUZZY_PARTICIPATION_FILE_NAME_PREFIX = f"{RESULTS_FILE_NAME_PREFIX}_{FUZZY_PARTICIPATION_PREFIX}"
ERRORS_FUZZY_PARTICIPATION_FILE_NAME_PREFIX = f"{ERRORS_FILE_NAME_PREFIX}_{FUZZY_PARTICIPATION_PREFIX}"

EXAMPLE_FILE_NAME = "bank"

MIN_DRIFT_SIZE = 1 # min amount of features to drift
MAX_DRIFT_SIZE = 4 # max amount of features to drift, -1 means all features

AFTER_WINDOW_TEST_SIZES = [0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]